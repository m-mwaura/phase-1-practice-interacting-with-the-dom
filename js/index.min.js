/*
"use strict";function _toConsumableArray(a){if(Array.isArray(a)){for(var b=0,c=Array(a.length);b<a.length;b++)c[b]=a[b];return c}return Array.from(a)}var playing=!0,timer=function(){return setInterval(function(){var a=document.getElementById("counter"),b=parseInt(a.innerText);a.innerText=b+1},1e3)},interval=timer(),minus=document.getElementById("minus"),plus=document.getElementById("plus"),heart=document.getElementById("heart"),pause=document.getElementById("pause"),commentForm=document.getElementsByTagName("form")[0];minus.addEventListener("click",function(){var a=document.getElementById("counter"),b=parseInt(a.innerText);a.innerText=b-1}),plus.addEventListener("click",function(){var a=document.getElementById("counter"),b=parseInt(a.innerText);a.innerText=b+1}),heart.addEventListener("click",function(){var a=document.getElementById("counter"),b=parseInt(a.innerText),c=document.querySelector(".likes"),d=void 0;if([].concat(_toConsumableArray(c.children)).map(function(a){return parseInt(a.dataset.num)}).includes(b)){d=document.querySelector('[data-num="'+b+'"]');var e=parseInt(d.children[0].innerText);d.innerHTML=b+" has been liked <span>"+(e+1)+"</span> times"}else(d=document.createElement("li")).setAttribute("data-num",b),d.innerHTML=b+" has been liked <span>1</span> time",c.appendChild(d)}),pause.addEventListener("click",function(){playing?(playing=!1,clearInterval(interval),this.innerText="resume"):(playing=!0,interval=timer(),this.innerText="pause"),[].concat(_toConsumableArray(document.getElementsByTagName("button"))).forEach(function(a){"pause"!==a.id&&(a.disabled=!playing)})}),commentForm.addEventListener("submit",function(a){a.preventDefault();var b=this.children[0],c=b.value;b.value="";var d=document.querySelector(".comments"),e=document.createElement("p");e.innerText=c,d.appendChild(e)});
*/

let counter = document.getElementById('counter');
let pauseButton = document.getElementById('pause');
let intervalid;
let isPaused = false;

//function to start timer
function startTimer(){
    intervalid = setInterval(() => {
        counter.textContent = parseInt(counter.textContent) + 1;

    }, 1000);
}
startTimer();

//increament and decreament buttons
document.getElementById('plus').addEventListener('click', () => {
    counter.textContent = parent(counter.textContent) + 1;
});

document.getElementById('minus').addEventListener('click', () => {
    counter.textContent = parseInt(counter.textContent) - 1;
});

//like function
let likes = {};
let likesList = document.querySelector('.likes');

document.getElementById('heart').addEventListener('click', () => {
  const count = counter.textContent;
  likes[count] = (likes[count] || 0) + 1;

  let existingLike = document.querySelector(`li[data-count="${count}"]`);
  if (existingLike) {
    existingLike.textContent = `${count} has been liked ${likes[count]} time(s).`;
  } else {
    let newLike = document.createElement('li');
    newLike.setAttribute('data-count', count);
    newLike.textContent = `${count} has been liked ${likes[count]} time(s).`;
    likesList.appendChild(newLike);
  }
});


// pause and resume timer

pauseButton.addEventListener('click', () => {
    if (isPaused) {
        startTimer();
        pauseButton.textContent = 'pause';
        document.getElementById('minus').disabled = false;
        document.getElementById('plus').disabled = false;
        document.getElementById('heart').disabled = false;
        isPaused = false;
    } else {
        clearInterval(intervalid);
        pauseButton.textContent = 'resume';
        document.getElementById('minus').disabled = true;
        document.getElementById('plus').disabled = true;
        document.getElementById('heart').disabled = true;
        isPaused = true;

    }
});

//comment box
let commentForm = document.getElementById('comment-form');
let commentList = document.getElementById('list');

commentForm.addEventListener('submit', (event) =>{
    event.preventDefault();
    let commentInput = document.getElementById('comment-input');
    let newComment = document.createElement('p');
    newComment.textContent = commentInput.value;
    commentList.appendChild(newComment);
    commentInput.value = '';
});
